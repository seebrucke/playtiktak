{"ast":null,"code":"import _classCallCheck from \"/Users/mojtabazargar/Desktop/React/newplay/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mojtabazargar/Desktop/React/newplay/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mojtabazargar/Desktop/React/newplay/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mojtabazargar/Desktop/React/newplay/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mojtabazargar/Desktop/React/newplay/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/mojtabazargar/Desktop/React/newplay/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nvar NumberOfColumns = 4;\nvar NumberOfRows = 4;\nvar cellStyle = {\n  background: \"red\",\n  padding: 2\n};\n\nvar Circle =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Circle, _Component);\n\n  function Circle() {\n    _classCallCheck(this, Circle);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Circle).apply(this, arguments));\n  }\n\n  _createClass(Circle, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var color = \"yellow\";\n      var myrow = this.props.row;\n      var mycol = this.props.col;\n      var mycolor = this.props.color[myrow][mycol];\n\n      if (mycolor === 1) {\n        color = \"green\";\n      }\n\n      if (mycolor === 2) {\n        color = \"blue\";\n      } // var mycolor=this.props.color[this.props.row][this.props.col];\n      // console.log(\"row is:\" +this.props.row  + \".///.col is .....\" + this.props.col + \"....mycolor:\" + this.mycolor)\n      //  var color = this.props.color\n\n\n      var style = {\n        width: 50,\n        height: 50,\n        borderRadius: 50,\n        color: \"black\",\n        background: color\n      };\n      return React.createElement(\"div\", {\n        style: style,\n        onClick: function onClick(e) {\n          return _this.props.clickHandling(_this.props.row, _this.props.col);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Circle;\n}(Component);\n\nvar Cell =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(Cell, _Component2);\n\n  function Cell() {\n    _classCallCheck(this, Cell);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Cell).apply(this, arguments));\n  }\n\n  _createClass(Cell, [{\n    key: \"render\",\n    // constructor(props){\n    //   super(props){}\n    // }\n    value: function render() {\n      return React.createElement(\"div\", {\n        style: cellStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(Circle, {\n        col: this.props.col,\n        row: this.props.row,\n        color: this.props.color,\n        clickHandling: this.props.clickHandling,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Cell;\n}(Component);\n\nvar Row =\n/*#__PURE__*/\nfunction (_Component3) {\n  _inherits(Row, _Component3);\n\n  function Row() {\n    _classCallCheck(this, Row);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Row).apply(this, arguments));\n  }\n\n  _createClass(Row, [{\n    key: \"render\",\n    value: function render() {\n      var row1 = [];\n\n      for (var i = 0; i < NumberOfColumns; i++) {\n        row1.push(React.createElement(Cell, {\n          col: i,\n          key: i,\n          row: this.props.row,\n          color: this.props.color,\n          clickHandling: this.props.clickHandling,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }));\n      }\n\n      return React.createElement(\"div\", {\n        style: {\n          display: \"flex\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, row1);\n    }\n  }]);\n\n  return Row;\n}(Component);\n\nvar Bord =\n/*#__PURE__*/\nfunction (_Component4) {\n  _inherits(Bord, _Component4);\n\n  function Bord(props) {\n    var _this2;\n\n    _classCallCheck(this, Bord);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(Bord).call(this, props));\n\n    _this2.checkit = function () {\n      console.log(\"winner\");\n      var arr = _this2.state.stateOfCells;\n      console.log(arr);\n\n      for (var i = 0; i < NumberOfRows; i++) {\n        console.log(\"i = \" + i);\n\n        for (var j = 0; j < NumberOfColumns; j++) {\n          console.log(\"j = \" + i);\n          if (arr[j] != 1) return;else {\n            _this2.setState({\n              winner: _this2.state.turn ? \"blue\" : \"green\"\n            });\n          }\n        }\n      }\n    };\n\n    _this2.resetFunction = function () {\n      var stateCells = [];\n\n      for (var i = 0; i < NumberOfColumns; i++) {\n        stateCells.push([]);\n\n        for (var j = 0; j < NumberOfRows; j++) {\n          stateCells[i].push(0);\n        }\n      }\n\n      ;\n\n      _this2.setState({\n        turn: \"true\",\n        stateOfCells: stateCells,\n        color: \"yellow\"\n      });\n    };\n\n    _this2.changeState = function (row, col) {\n      _this2.checkit();\n\n      var myTurn = _this2.state.turn ? false : true;\n      var tempArr = _this2.state.stateOfCells;\n\n      if (myTurn) {\n        tempArr[row][col] = 1;\n      } else {\n        tempArr[row][col] = 2;\n      }\n\n      _this2.setState({\n        statOfCells: tempArr,\n        turn: myTurn\n      });\n    };\n\n    var _stateCells = [];\n\n    for (var i = 0; i < NumberOfColumns; i++) {\n      _stateCells.push([]);\n\n      for (var j = 0; j < NumberOfRows; j++) {\n        _stateCells[i].push(0);\n      }\n    }\n\n    ;\n    _this2.state = {\n      turn: \"true\",\n      winner: \" \",\n      stateOfCells: _stateCells,\n      color: \"yellow\"\n    };\n    return _this2;\n  }\n\n  _createClass(Bord, [{\n    key: \"render\",\n    value: function render() {\n      var cols = [[], []];\n\n      for (var i = 0; i < NumberOfRows; i++) {\n        cols.push(React.createElement(Row, {\n          key: i,\n          row: i,\n          color: this.state.stateOfCells,\n          clickHandling: this.changeState,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }));\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, cols, React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \" now player no \"), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \" \", this.state.turn ? \"blue\" : \"green\"), React.createElement(\"button\", {\n        onClick: this.resetFunction,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \" Reset\"), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"winner:   \", this.state.winner));\n    }\n  }]);\n\n  return Bord;\n}(Component);\n\nvar App =\n/*#__PURE__*/\nfunction (_Component5) {\n  _inherits(App, _Component5);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(App).apply(this, arguments));\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"App-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(Bord, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/mojtabazargar/Desktop/React/newplay/src/App.js"],"names":["React","Component","NumberOfColumns","NumberOfRows","cellStyle","background","padding","Circle","color","myrow","props","row","mycol","col","mycolor","style","width","height","borderRadius","e","clickHandling","Cell","Row","row1","i","push","display","Bord","checkit","console","log","arr","state","stateOfCells","j","setState","winner","turn","resetFunction","stateCells","changeState","myTurn","tempArr","statOfCells","cols","App"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n var NumberOfColumns = 4;\n var NumberOfRows = 4;\nvar cellStyle={\n  background:\"red\",\n  padding:2\n}\nclass Circle extends Component{\n  \n  render(){\n    var color = \"yellow\"\n    var myrow = this.props.row;\n    var mycol = this.props.col;\n    var mycolor=this.props.color[myrow][mycol];\n  \n    if ( mycolor === 1){color=\"green\"}\n    if(mycolor === 2 ){color=\"blue\"}\n    // var mycolor=this.props.color[this.props.row][this.props.col];\n    // console.log(\"row is:\" +this.props.row  + \".///.col is .....\" + this.props.col + \"....mycolor:\" + this.mycolor)\n  //  var color = this.props.color\n    var style={\n      width:50,\n      height:50,\n      borderRadius:50,\n      color:\"black\",\n      background:color,\n    }\n    return( <div style={style} onClick={(e) => this.props.clickHandling(this.props.row,this.props.col)}></div>)\n  }\n}\nclass Cell extends Component{\n  // constructor(props){\n  //   super(props){}\n\n  // }\n  render(){\n    return(<div style={cellStyle} >\n  <Circle col={this.props.col} row={this.props.row} color={this.props.color}  clickHandling={this.props.clickHandling}/>\n    </div>)\n  }\n}\nclass Row extends Component{\nrender(){\n  var row1=[]\n  for (let i = 0 ; i < NumberOfColumns ; i++){row1.push(<Cell col={i} key={i} row={this.props.row} color={this.props.color} clickHandling={this.props.clickHandling}/>)}\n\n  return(<div style={{display:\"flex\"}} >\n    {row1}\n  </div> )\n}\n}\nclass Bord extends Component{\n    constructor(props){\n    super(props);\n    var stateCells =[];\n    for( let i = 0 ; i < NumberOfColumns ; i++ ){\n       stateCells.push([]);\n      for( let j = 0 ; j < NumberOfRows    ; j++ ){ stateCells[i].push(0)} };\n\n    this.state={turn:\"true\",winner : \" \",stateOfCells:stateCells,color:\"yellow\"};\n \n  }\n checkit=()=>{\n  console.log(\"winner\");\n   var arr = this.state.stateOfCells;\n   console.log(arr);\n   for ( let i = 0 ; i < NumberOfRows ; i++){\n     console.log(\"i = \"  + i);\n     for(let j = 0 ; j < NumberOfColumns ; j++){\n     console.log(\"j = \"  + i);\n        if(arr[j] != 1)return \n        else{ this.setState({winner:this.state.turn? \"blue\":\"green\"})\n     \n      }\n     }\n   }\n  }\n  resetFunction =()=>{\n    var stateCells =[];\n    for( let i = 0 ; i < NumberOfColumns ; i++ ){\n       stateCells.push([]);\n      for( let j = 0 ; j < NumberOfRows    ; j++ ){ stateCells[i].push(0)} };\n\n    this.setState({turn:\"true\",stateOfCells:stateCells,color:\"yellow\"});\n    }\n\n\n  changeState =(row,col)=> {\n   this.checkit();\n    var myTurn = this.state.turn ? false : true;\n    var tempArr = this.state.stateOfCells;\n    if (myTurn){ tempArr[row][col]=1;}\n     else{tempArr[row][col]=2}\n    this.setState({statOfCells:tempArr,turn:myTurn});\n\n        }\n  render(){\n    var cols=[[],[]]\n    for(let i = 0 ; i < NumberOfRows ; i++){cols.push(<Row key={i} row={i} color={this.state.stateOfCells} clickHandling={this.changeState} />)}\n    return(\n      <div >\n        {cols}\n        <h5> now player no </h5><h2> {this.state.turn? \"blue\" : \"green\"}</h2>\n        <button onClick={this.resetFunction}> Reset</button>\n        <h3>winner:   {this.state.winner}</h3>\n      </div>\n    )\n  }\n}\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n        <Bord  />\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}